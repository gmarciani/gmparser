
   ___|   \  |   _ \                               
  |      |\/ |  |   |  _` |   __|  __|   _ \   __| 
  |   |  |   |  ___/  (   |  |   \__ \   __/  |    
 \____| _|  _| _|    \__,_| _|   ____/ \___| _|    
 
 
# ABSTRACT
GMParser is a command-line based application that allows the user to 
parse a word, analyze a grammar or transform a grammar.
Whatever the selected operation, the application will provide the user with 
a comprehensive output to enjoy the art of formal languages and parsing.


# AUTHOR
Giacomo Marciani is a Computer Engineering student at University 'Tor Vergata' of Rome.
Author's email: giacomo.marciani@gmail.com


# BIBLIOGRAPHY
"Automata Theory and Formal Languages" (3rd edition), A.Pettorossi
"Techniques for Searching, Parsing and Matching" (3rd edition), A.Pettorossi


# UPDATES
GMParser updates available at https://github.com/giacomomarciani/gmparser


# NOTE: EMPTY WORD (ε)
The empty word (epsilon) is coded by the symbol ε (Unicode: 03b5).
So, to insert the empty word, the user should escape the Unicode, 
as usual:

	(Ctrl+Shift+u then type '03b5' then press the space key).


# EXECUTION
Simply run the .jar with neither arguments nor options to access the 
GMParser main view.

	(java -jar) gmparser.jar

A handy menu-based navigation will guide the user in the use of the app.


# GRAMMAR ANALYSIS
A grammar analysis is a complete report about the specified grammar.
The following parameters are available:
 - axiom
 - epsilon;
 - non terminal alphabet
 - terminal alphabet
 - set of productions
 - grammar type (Chomsky hierarchy)
 - grammar extension (Extended/S-Extended/None)
 - grammar normal form (Chomsky/Greibach/None)
 - subset of epsilon productions
 - subset of unit productions
 - subset of non trivial unit productions
 - subset of trivial unit productions
 - subset of nullable symbols
 - subset of ungenerative symbols
 - subset of unreacheable symbols
 - subset of useless symbols

	(java -jar) gmparser.jar -a YOUR_GRAMMAR


# GRAMMAR TRANSFORMATIONS
The following transformations are available:
 - Generation of Chomsky Normal Form (CYK)
 - Removal of ungenerative symbols (RGS)
 - Removal of unreacheable symbols (RRS)
 - Removal of useless symbols (RUS)
 - Removal of epsilon productions (REP)
 - Removal of unit productions (RUP)

	(java -jar) gmparser.jar -t YOUR_TRANSFORMATION YOUR_GRAMMAR 


# PARSING
The following parsers are available:
 - Cocke-Younger-Kasami parser (CYK)
 - LR(1) parser (LR1)

	(java -jar) gmparser.jar -p YOUR_PARSER YOUR_WORD YOUR_GRAMMAR


# DOCUMENTATION
The code is fully documented. 

Particular attention has been given to the documentation on the most critical 
and interesting portions of code. 
To facilitate the code navigability, had been inserted bookmarks in correspondence 
with the aforesaid portions (available by the Eclipse 'Bookmarks' view).

JavaDocs available at http://gmarciani.com/project/gmparser/javadoc/index.html

# TEST
The tests were run on a 2 GHz Intel i5 with 2GB of RAM, running Linux Ubuntu 14.04 
and Java 1.7.

Every JUnit-based test suite is available in package gmparser.test.

Tests output related to parsing session, both on Cocke-Younger-Kasami and 
LR(1) parser are available in folder /test.


# LICENCE
The MIT License (MIT)
Copyright (c) 2014 Giacomo Marciani
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
